import { db } from "../firebase.js";

export const getUserData = async (user) => {
  if (!user || !user.uid) {
    console.error("‚ùå –ù–µ–¥—ñ–π—Å–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á:", user);
    throw new Error("Invalid user object");
  }

  console.log("üìå getUserData –≤–∏–∫–ª–∏–∫–∞–Ω–æ! User:", user);

  try {
    // üî• –ê–¥–º—ñ–Ω—Å—å–∫–∏–π SDK –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î `db.collection().doc()`
    const userRef = db.collection("users").doc(user.uid);
    const userDoc = await userRef.get(); // Firestore Admin SDK –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î `.get()`, –∞ –Ω–µ `getDoc()`

    if (!userDoc.exists) {
      console.error("‚ùå –î–æ–∫—É–º–µ–Ω—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ Firestore");
      return { bookmarks: [] }; // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ–π –º–∞—Å–∏–≤, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –ø–æ–º–∏–ª–æ–∫
    }

    const userData = userDoc.data();
    console.log("‚úÖ –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:", userData);

    const bookmarksRefs = userData?.bookmarks ?? [];

    const bookmarks = await Promise.all(
      bookmarksRefs.map(async (exerciseRef) => {
        const exercisePath = exerciseRef?.path; // –û—Ç—Ä–∏–º—É—î–º–æ —à–ª—è—Ö
        if (!exercisePath) {
          console.warn(`‚ö†Ô∏è –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π —Ä–µ—Ñ–µ—Ä–µ–Ω—Å:`, exerciseRef);
          return null;
        }

        try {
          const exerciseRef = db.doc(exercisePath); // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø–æ–≤–Ω–∏–π —à–ª—è—Ö
          const exerciseDoc = await exerciseRef.get();

          if (!exerciseDoc.exists) {
            console.warn(`‚ö†Ô∏è –í–ø—Ä–∞–≤–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞: ${exercisePath}`);
            return null;
          }

          return { id: exerciseDoc.id, ...exerciseDoc.data() };
        } catch (error) {
          console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–æ–∫—É–º–µ–Ω—Ç–∞ –¥–ª—è ${exercisePath}:`, error);
          return null;
        }
      })
    );

    return { bookmarks: bookmarks.filter((b) => b !== null) };
  } catch (error) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:", error);
    return { bookmarks: [] };
  }
};
